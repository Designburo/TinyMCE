Note:
The following is an example of the content needed on LocalSettings.php when using the 'Upgrade to TinyMCE 5' branch code:

wfLoadExtension( 'TinyMCE' );
	$wgTinyMCEEnabled = true;
#Custom TinyMCE configuration
	$wgTinyMCESettings = array(
		".tinymce, #wpTextbox1" => array (
			"external_plugins+" => array (
				'fontawesome' => $wgScriptPath.'/extensions/TinyMCE/custom_plugins/fontawesome/plugins/fontawesome/plugin.js'
			),
			"content_css+" => array (
				$wgScriptPath.'/extensions/TinyMCE/custom_plugins/fontawesome/plugins/fontawesome/css/all.min.css'
			),
			"toolbar+" => ' | fontawesome',
			"height-" => '',
			"linkDialogNameCategories" => array (
			),
			"linkDialogNameSpaces" => array (
				'main',
				'talk'
			),
			"tinyMCETemplates" => array(
				array (
					'title' => 'Preformatted',
					'description' => 'Icon Preformatted.png',
					'content' => '<pre><span class="selectedcontent">INSERT_TEXT_HERE</span></pre>'
				),
				array(
					'title' => 'Draw.io PNG',
					'description' => 'https://mydomain.com/images/tinymce/paint-brush.png',
					'content' => '{{#drawio:<span class="selectedcontent">INSERT_NAME_HERE</span>|type=png}}'
				),
				array(
					'title' => 'Code',
					'description' => 'Icon Syntaxhighlight.png',
					'content' => '<syntaxhighlight lang="CODELANG"><span class="selectedcontent">INSERT_CODE_HERE</span></syntaxhighlight>'
				)
			)
		)
	);

Notes:
1.  At the top level of the $wgTinyMCESettings variable there are key value pairs where the key is a list of selectors and the values are arrays of settings that the tinymce editor will apply to those selectors. For the example below the selectors are .tinymce and #wpTextbox1
2.  The settings will modify the default settings set in MW_tinymce.js as described below.
3.  The $wgTinyMCESettings array can have multiple entries so multiple different configurations of TinyMCE are possible depending on the selectors.
4.  Each of the settings is a key value pair where the key is the name of a configuration variable
5.  The configuration variable can be a standard TinyMCE configuration variable as described in the TinyMCE documentation, for example the 'toolbar' setting is shown below.
6.  The key can also reference a non-standard config variable for use by a custom plugin, for example the 'tinyMCETemplates' variable below.
7.  The key may also be followed by a '+' or '-' sign
8.  A '+' indicates that the value in the key value pair should be added to the default value set in MW_tinymce.js, for example the 'toolbar+' in the example below adds the fontawesome button to the existing toolbar
9.  A '-' would indicate the removal of an item from the existing default value. For example the 'toolbar-' below removes the charmap button from the existing toolbar.
10. If the key is followed by a '-' and the value is empty then the key is removed from the default set altogether. For example the 'height-' below removes the setting for 'height' from the default set, meaning the TinyMCE default is applied
11. If there is no '+' or '-' then the value replaces the existing default configuration value.

== About ==

TinyMCE is an extension to MediaWiki that allows for using the
open source TinyMCE text editor to edit page contents.

For more information on the TinyMCE extension, see its homepage at
https://www.mediawiki.org/wiki/Extension:TinyMCE

== Credits ==

The TinyMCE extension was created by Duncan Crane and Yaron Koren.
It uses a significant amount of code from the VisualEditor
extension by Hallo Welt!, which is part of the BlueSpice MediaWiki
package. (Not to be confused with the better-known VisualEditor
extension developed by the Wikimedia Foundation.)

The majority of the code, though, consists of the TinyMCE editor
itself, which was mostly developed by the Ephox corporation.

== Contact ==

Comments, questions and suggestions can be submitted on the TinyMCE
extension's talk page, or sent to the MediaWiki mailing list:

 https://lists.wikimedia.org/mailman/listinfo/mediawiki-l

If possible, please add "[TinyMCE]" at the beginning of the subject
line, to clarify the subject matter.

Bug reports should be submitted at the Wikimedia Phabricator site:

 https://phabricator.wikimedia.org/maniphest/task/create/

== Credits to other projects ==

The TinyMCE extension includes the following JavaScript libraries:

* TinyMCE (https://www.tinymce.com), distributed under the LGPL.

* FancyBox (http://fancybox.net) by Janis Skarnelis, distributed
under both the MIT and GPL licenses.

TinyMCE also makes extensive use of the jQuery JavaScript library,
included within MediaWiki.
